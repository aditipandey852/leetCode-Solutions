class Solution(object):
    def maxProbability(self, n, edges, succProb, start_node, end_node):
        dist = [0]*n
        dist[start_node] = 1
        for _ in range(n-1):
            updated = False
            for i , (u,v) in enumerate(edges):
                if dist[u] * succProb[i] > dist[v]:
                    dist[v] = dist[u] * succProb[i]
                    updated = True
                if dist[v]*succProb[i]>dist[u]:
                    dist[u] = dist[v]* succProb[i]
                    updated = True
            if not updated:
                break
        return dist[end_node]
